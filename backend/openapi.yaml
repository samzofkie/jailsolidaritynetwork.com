openapi: 3.1.0
info:
  title: Jail Solidarity Network
  description: This API provides CRUD functionality to a database containing written and recorded testimonies of life inside the Cook County Jail in Chicago, IL collected from inmates.
  version: 1.0.0
components:
  schemas:
    errorMessage:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
    testimonyRead:
      type: object
      properties:
        testimonyId:
          description: The unique identifier for the testimony.
          type: integer
        dateReceived:
          description: A string denoting the month the testimony was received, in the format 'YYYY-MM'.
          type: string
        lengthOfStay:
          description: The number of months the respondent was incarcerated, at the time the tesimony was received.
          type: integer
        gender:
          description: The gender of the respondent.
          type: string
        divisions:
          description: A list of divisions the testimony applies to.
          type: array
          items:
            type: string
        transcription:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              sentenceId:
                description: The unique identifier for the sentence.
                type: integer
              text:
                description: The text of the sentence.
                type: string
              categories:
                description: The topics applied to that sentence.
                type: array
                items:
                  type: string
        files:
          description: A list of files on the server pertaining to this testimony.
          type: array
          items:
            string
        required:
        - testimonyId
    testimonyWrite:
      type: object
      properties:
        dateReceived:
          description: A string denoting the month the testimony was received, in the format 'YYYY-MM'.
          type: string
        lengthOfStay:
          description: The number of months the respondent was incarcerated, at the time the tesimony was received.
          type: integer
        gender:
          description: The gender of the respondent.
          type: string
        divisions:
          description: A list of divisions the testimony applies to.
          type: array
          items:
            type: string
        transcription:
          type: array
          items:
            type: object
            properties:
              text:
                description: The text of the sentence.
                type: string
              categories:
                description: The topics applied to that sentence.
                type: array
                items:
                  type: string
            required:
            - text
      required:
      - anyOf:
        - dateReceived
        - lengthOfStay
        - gender
        - divisions
        - transcription
  responses:
    successfulArray:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  items:
                    type: array
                    minItems: 1
                    items:
                      type: string
    unauthorized:
      description: Authorization attempt failed.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
    badTestimonyRequest:
      description: Testimony data couldn't be validated.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
    resourceNotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errorMessage"
  parameters:
    authorizationToken:
      name: authorization
      in: header
      description: Authorization JWT.
      schema:
        type: string
      required: true
    testimonyId:
      name: testimonyId
      in: path
      required: true
      schema:
        type: string
  requestBodies:
    testimonyWriteRequest:
      description: A valid testimonyWrite object.
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/testimonyWrite"
paths:
  /categories:
    get:
      summary: Get a list of topics the testimonies are grouped into.
      responses:
        "200":
          $ref: "#/components/responses/successfulArray"
  /divisions:
    get:
      summary: Get a list of topics the testimonies are grouped into.
      responses:
        "200":
          $ref: "#/components/responses/successfulArray"
  /auth:
    post:
      summary: Submit a username and password in exchange for an authorization JWT.
      requestBody:
        description: Username and plaintext password.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    username:
                      type: string
                    password:
                      type: string
      responses:
        "201":
          description: Authorization token created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
        "400":
          description: Bad request syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        "401":
          description: Username or password invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
  /testimonies:
    get:
      summary: Get an array of objects containing the data of each testimony entry in the database.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/testimonyRead"
    post:
      summary: Create a new testimony record in the database.
      parameters:
      - $ref: "#/components/parameters/authorizationToken"
      requestBody:
        $ref: "#/components/requestBodies/testimonyWriteRequest"
      responses:
        "201":
          description: New successfully testimony created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      testimonyId:
                        description: The unique identifier for the testimony.
                        type: integer
        "400":
          $ref: "#components/responses/badTestimonyRequest"
        "401":
          $ref: "#/components/responses/unauthorized"  
  /testimonies/{testimonyId}:
    get:
      summary: Get an object containing the data of a specific testimony.
      parameters:
      - $ref: "#/components/parameters/testimonyId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/testimonyRead"
        "404":
          $ref: "#components/responses/resourceNotFound"
    put:
      summary: Update some values of a specific testimony in the database.
      parameters:
      - $ref: "#/components/parameters/authorizationToken"
      - $ref: "#/components/parameters/testimonyId"
      requestBody:
        $ref: "#/components/requestBodies/testimonyWriteRequest"
      responses:
        "200":
          description: Update successful.
        "400":
          $ref: "#components/responses/badTestimonyRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#components/responses/resourceNotFound"
    delete:
      summary: Delete a testimony in the database.
      parameters:
      - $ref: "#/components/parameters/authorizationToken"
      - $ref: "#/components/parameters/testimonyId"
      responses:
        "200":
          description: Deletion successful.
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#components/responses/resourceNotFound"
  /testimonies/{testimonyId}/files:
    post:
      summary: Upload a new file for a specific testimony to the server.
      parameters:
      - $ref: "#/components/parameters/authorizationToken"
      - $ref: "#/components/parameters/testimonyId"
      requestBody:
        content:
          image/png: {}
          image/jpeg: {}
          application/pdf: {}
      responses:
        "200":
          description: File successfully uploaded.
        "400":
          description: File format not supported.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorMessage"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#components/responses/resourceNotFound"
  /testimonies/{testimonyId}/files/{fileId}:
    delete:
      summary: Delete a specific file associated with a specific testimony from the server.
      parameters:
      - $ref: "#/components/parameters/authorizationToken"
      - $ref: "#/components/parameters/testimonyId"
      - name: fileId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: File successfully deleted.
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#components/responses/resourceNotFound"
        
